How did viewing a diff between two versions of a file help you see the bug that
was introduced?
	- When check with last functional version, it's easier to notice what's 
missing or changed that introduce bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
	- Easier to recall the chaning history & error as well as collaborate with
other programmers.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
	- Manual Pros: Could commit only when logical changes are made
	Manual Cons: Easy to forget commit especially when system is down or unforeseen
	errors are faced

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
	- Multiple File: More flexible to the user since it's manually commit
	Seperate file: Since it's automatically commit, the system can't decide which
	group of files to lump together

How can you use the commands git log and git diff to view the history of files?
	- git log: View entire history
	git diff: View diff of 
		1) working directory vs staging area 
		2) between 2 commit 
		3) staging area vs latest commit

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
