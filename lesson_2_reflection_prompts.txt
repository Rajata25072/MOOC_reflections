What happens when you initialize a repository? Why do you need to do it?
- Initiate the .git hidden file in order to start tracking metadata for historical file changes

How is the staging area different from the working directory and the repository? What value do you think it offers?
- staging area: intermediate place to hold the files before committing the change to be stored
working directory: main directory that work is going on
repository: place to store metadata regarding file historical change
Value offered: Could show difference in 2 stages
1. staging area/recent commit vs working directory: progress done in staging area
2. staging area vs repository: progress of latest work vs last stored commit

How can you use the staging area to make sure you have one commit per logical change?
- check the difference using 
1. git diff (staging area/recent commit vs working directory): progress done in working directory compared to last saved commit
2. git diff --staged (staging area vs recent commit): progress of file in staging area vs last stored commit

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- Can do experimental or add-on feature (which could introduce bugs) without interupting the core work (which suppose to me always working nicely)

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
